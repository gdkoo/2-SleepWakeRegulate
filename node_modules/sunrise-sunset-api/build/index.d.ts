import { Options as KyOptions } from "ky";
import { MOCK_FORMATTED_RESPONSE, MOCK_UNFORMATTED_RESPONSE } from "./mocks";
export { MOCK_FORMATTED_RESPONSE, MOCK_UNFORMATTED_RESPONSE };
interface BaseSunriseSunsetOptions {
    latitude: number;
    longitude: number;
    date?: string | null;
    apiUrl?: string;
    kyOptions?: KyOptions;
    useMocks?: boolean;
}
export interface SunriseSunsetOptions extends BaseSunriseSunsetOptions {
    formatted?: boolean;
}
interface BaseSunriseSunsetResponse {
    sunrise: string;
    sunset: string;
    solarNoon: string;
    civilTwilightBegin: string;
    civilTwilightEnd: string;
    nauticalTwilightBegin: string;
    nauticalTwilightEnd: string;
    astronomicalTwilightBegin: string;
    astronomicalTwilightEnd: string;
}
export interface UnformattedSunriseSunsetResponse extends BaseSunriseSunsetResponse {
    dayLength: string;
}
export interface FormattedSunriseSunsetResponse extends BaseSunriseSunsetResponse {
    dayLength: number;
}
export declare type SunriseSunsetResponse = FormattedSunriseSunsetResponse | UnformattedSunriseSunsetResponse;
export declare function getSunriseSunsetInfo(options: BaseSunriseSunsetOptions & {
    formatted: false;
}): Promise<UnformattedSunriseSunsetResponse>;
export declare function getSunriseSunsetInfo(options: BaseSunriseSunsetOptions & {
    formatted?: true;
}): Promise<FormattedSunriseSunsetResponse>;
export declare function getSunriseSunsetInfo(options: BaseSunriseSunsetOptions & {
    formatted: boolean;
}): Promise<SunriseSunsetResponse>;
export declare function getSunriseSunsetInfo(options: SunriseSunsetOptions): Promise<SunriseSunsetResponse>;
